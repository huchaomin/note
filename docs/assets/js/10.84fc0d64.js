(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{474:function(t,s,a){"use strict";a.r(s);var r=a(7),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"preload-提前加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preload-提前加载"}},[t._v("#")]),t._v(" preload (提前加载)")]),t._v(" "),a("ul",[a("li",[t._v("请求在还没到解析页面的时候就已经开始预加载资源了（放在头部）")]),t._v(" "),a("li",[t._v("确定该资源即将要被使用")]),t._v(" "),a("li",[t._v("获取后被缓存，等待被使用。所以顺序是使用者的循序，不是preload请求时的顺序")]),t._v(" "),a("li",[t._v("不会造成二次下载，使用者会等待，一旦页面关闭了，它也就会立即停止 preload 获取资源")]),t._v(" "),a("li",[t._v("preload 字体不带 crossorigin 也将会二次获取")]),t._v(" "),a("li",[t._v("IE（包括11）不支持")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检测 <link rel=”preload”> 是否被支持")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("preloadSupported")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" link "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'link'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" relList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" link"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relList\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("relList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("relList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("supports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" relList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("supports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'preload'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"prefetch-预判加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prefetch-预判加载"}},[t._v("#")]),t._v(" prefetch （预判加载）")]),t._v(" "),a("ul",[a("li",[t._v("告诉浏览器未来可能会使用到的某个资源，浏览器就会在闲时去加载对应的资源（不能滥用）")]),t._v(" "),a("li",[t._v("获取后被缓存，等待被使用。所以顺序是使用者的循序，不是prefetch请求时的顺序")]),t._v(" "),a("li",[t._v("如果在使用者使用之前加载完毕，不会造成二次下载（prefetch cache）")]),t._v(" "),a("li",[t._v("如果在使用者使用之前没有加载完毕，会造成二次下载，使用者不会等待，即使页面关闭，prefetch 发起的请求仍会进行不会中断")]),t._v(" "),a("li",[t._v("支持IE11")])]),t._v(" "),a("blockquote",[a("p",[t._v("在首屏渲染优化尤其重要"),a("br"),t._v("\n两者都不会只下载资源并不执行，待真正使用到才会执行文件")])]),t._v(" "),a("v-alert",{attrs:{color:"primary",icon:"mdi-lightbulb-multiple"}},[t._v("预解析\n"),a("p",[t._v("WebKit 和 Firefox 都进行了这项优化。"),a("br"),t._v("\n在执行脚本时，其他线程会解析文档的其余部分，找出并加载需要通过网络加载的其他资源。"),a("br"),t._v("\n通过这种方式，资源可以在并行连接上加载，从而提高总体速度。"),a("br"),t._v("\n请注意，预解析器不会修改 DOM 树，而是将这项工作交由主解析器处理；预解析器只会解析外部资源（例如外部脚本、样式表和图片）的引用")])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);