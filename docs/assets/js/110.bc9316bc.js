(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{598:function(t,a,s){"use strict";s.r(a);var e=s(7),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"array-方法汇总"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-方法汇总"}},[t._v("#")]),t._v(" Array 方法汇总")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"静态方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[t._v("#")]),t._v(" 静态方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Array.from()")]),t._v(" 方法对一个类似数组或可迭代对象创建一个新的，浅拷贝的数组实例")]),t._v(" "),s("li",[s("code",[t._v("Array.isArray()")]),t._v(" 用于确定传递的值是否是一个 Array")]),t._v(" "),s("li",[s("code",[t._v("Array.of()")]),t._v(" 方法创建一个具有可变数量参数的新数组实例，而不考虑参数的数量或类型\n注意")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [7]")]),t._v("\nArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 2, 3]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ , , , , , , ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [1, 2, 3]")]),t._v("\n")])])]),s("h4",{attrs:{id:"原型上面的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型上面的方法"}},[t._v("#")]),t._v(" 原型上面的方法")]),t._v(" "),s("p",[t._v("会改变原数组的方法")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("copyWithin()")]),t._v(" 方法浅复制数组的一部分到同一数组中的另一个位置，并返回它，不会改变原数组的长度")]),t._v(" "),s("li",[s("code",[t._v("fill()")]),t._v(" 方法用一个固定值填充一个数组中从起始索引到终止索引内的全部元素。不包括终止索引")]),t._v(" "),s("li",[s("code",[t._v("splice()")]),t._v(" 方法通过删除或替换现有元素或者原地添加新的元素来修改数组,并以数组形式返回被修改的内容")]),t._v(" "),s("li",[s("code",[t._v("reverse()")]),t._v(" 方法将数组中元素的位置颠倒，并返回该数组。数组的第一个元素会变成最后一个，数组的最后一个元素变成第一个")]),t._v(" "),s("li",[s("code",[t._v("sort()")]),t._v(" 方法用原地算法对数组的元素进行排序，并返回数组。默认排序顺序是在将元素转换为字符串，然后比较它们的UTF-16代码单元值序列时构建的")]),t._v(" "),s("li",[s("code",[t._v("pop()")]),t._v(" 后出")]),t._v(" "),s("li",[s("code",[t._v("push()")]),t._v(" 后入")]),t._v(" "),s("li",[s("code",[t._v("shift()")]),t._v(" 前出")]),t._v(" "),s("li",[s("code",[t._v("unshift()")]),t._v(" 前入")])]),t._v(" "),s("p",[t._v("不会改变原数组的方法")]),t._v(" "),s("ul",[s("li",[t._v("返回新数组: concat、filter、flat、map、slice(浅拷贝)")]),t._v(" "),s("li",[t._v("返回Boolean: every、includes、some")]),t._v(" "),s("li",[t._v("返回Iterator对象: entries、keys、values、find、findIndex、indexOf、lastIndexOf、forEach、join、reduce、reduceRight、toLocaleString、toString")])])])}),[],!1,null,null,null);a.default=n.exports}}]);