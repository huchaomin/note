(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{666:function(t,e,a){"use strict";a.r(e);var s=a(7),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("State 与 props 类似，但是 state 是私有的，并且完全受控于当前组件。")]),t._v(" "),a("h2",{attrs:{id:"向类组件中添加局部的状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#向类组件中添加局部的状态"}},[t._v("#")]),t._v(" 向类组件中添加局部的状态")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: new Date()};\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Clock />,\n  document.getElementById('root')\n);\n//此时还不会自动更新\n")])])]),a("h2",{attrs:{id:"添加生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加生命周期"}},[t._v("#")]),t._v(" 添加生命周期")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//相当于vue的mounted\ncomponentDidMount() {\n    this.timerID = setInterval(\n        () => this.tick(),\n        1000\n    );\n}\n//移除dom元素\ncomponentWillUnmount() {\n    clearInterval(this.timerID);\n}\n\ntick() {\n    this.setState({\n        date: new Date()\n    });\n}\n")])])]),a("h2",{attrs:{id:"正确使用state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正确使用state"}},[t._v("#")]),t._v(" 正确使用State")]),t._v(" "),a("h5",{attrs:{id:"不要直接修改状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不要直接修改状态"}},[t._v("#")]),t._v(" 不要直接修改状态")]),t._v(" "),a("p",[t._v("构造函数是唯一可以给this.state赋值的地方")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//其他地方\n// Wrong\nthis.state.comment = 'Hello';\n// Correct\nthis.setState({comment: 'Hello'});\n")])])]),a("h5",{attrs:{id:"状态的更新可能是异步的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态的更新可能是异步的"}},[t._v("#")]),t._v(" 状态的更新可能是异步的")]),t._v(" "),a("p",[t._v("出于性能考虑，React 可能会把多个 setState() 调用合并成一个调用。"),a("br"),t._v("\n因为 this.props 和 this.state 可能会异步更新，所以你不要依赖他们的值来更新下一个状态。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// Wrong\nthis.setState({\n  counter: this.state.counter + this.props.increment,\n});\n// Correct\nthis.setState((state, props) => ({\n  counter: state.counter + props.increment\n}));\n")])])]),a("h2",{attrs:{id:"数据是向下流动的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据是向下流动的"}},[t._v("#")]),t._v(" 数据是向下流动的")]),t._v(" "),a("p",[t._v("组件可以选择把它的 state 作为 props 向下传递到它的子组件中：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<FormattedDate date={this.state.date} />\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);