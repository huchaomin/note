(window.webpackJsonp=window.webpackJsonp||[]).push([[172],{680:function(t,e,n){"use strict";n.r(e);var a=n(7),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"使用生产版本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用生产版本"}},[t._v("#")]),t._v(" 使用生产版本")]),t._v(" "),n("h2",{attrs:{id:"使用-chrome-performance-标签分析组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-chrome-performance-标签分析组件"}},[t._v("#")]),t._v(" 使用 Chrome Performance 标签分析组件")]),t._v(" "),n("h2",{attrs:{id:"虚拟化长列表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#虚拟化长列表"}},[t._v("#")]),t._v(" 虚拟化长列表")]),t._v(" "),n("h2",{attrs:{id:"shouldcomponentupdate-避免调停"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shouldcomponentupdate-避免调停"}},[t._v("#")]),t._v(" shouldComponentUpdate（避免调停）")]),t._v(" "),n("p",[t._v("即使 React 只更新改变了的 DOM 节点，重新渲染仍然花费了一些时间。在大部分情况下它并不是问题，不过如果它已经慢到让人注意了，你可以通过覆盖生命周期方法shouldComponentUpdate 来进行提速。"),n("br"),t._v("\n该方法会在重新渲染前被触发。其默认实现总是返回 true，让 React 执行更新：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("shouldComponentUpdate(nextProps, nextState) {\n  return true;\n}\n")])])]),n("p",[t._v("如果你知道在什么情况下你的组件不需要更新，你可以在 shouldComponentUpdate 中返回 false 来跳过整个渲染过程。其包括该组件的 render 调用以及之后的操作。")]),t._v(" "),n("h5",{attrs:{id:"示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("class CounterButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {count: 1};\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.color !== nextProps.color) {\n      return true;\n    }\n    if (this.state.count !== nextState.count) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <button\n        color={this.props.color}\n        onClick={() => this.setState(state => ({count: state.count + 1}))}>\n        Count: {this.state.count}\n      </button>\n    );\n  }\n}\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);