(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{726:function(t,e,a){"use strict";a.r(e);var r=a(7),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm install grunt-contrib-connect --save-dev\n")])])]),a("h2",{attrs:{id:"options配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options配置"}},[t._v("#")]),t._v(" options配置")]),t._v(" "),a("h3",{attrs:{id:"_1、port-8000"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、port-8000"}},[t._v("#")]),t._v(" 1、port(8000)")]),t._v(" "),a("h3",{attrs:{id:"_2、protocol-http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、protocol-http"}},[t._v("#")]),t._v(" 2、protocol（http）")]),t._v(" "),a("h3",{attrs:{id:"_3、hostname-0-0-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、hostname-0-0-0-0"}},[t._v("#")]),t._v(" 3、hostname（0.0.0.0）")]),t._v(" "),a("h3",{attrs:{id:"_4、base"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、base"}},[t._v("#")]),t._v(" 4、base")]),t._v(" "),a("p",[t._v("string：将从中提供文件的基本（或根）目录。 默认为项目Gruntfile的目录。\narray:用于服务多个目录的String（或Object）数组。 给出的最后一个基础是[directory] []成为可浏览的。\nObject:包含路径和选项键的映射。 选项传递给serve-static模块。")]),t._v(" "),a("h3",{attrs:{id:"_5、directory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、directory"}},[t._v("#")]),t._v(" 5、directory")]),t._v(" "),a("p",[t._v("设置为您希望可浏览的目录。 用于覆盖基本选项可浏览目录。")]),t._v(" "),a("h3",{attrs:{id:"_6、keepalive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、keepalive"}},[t._v("#")]),t._v(" 6、keepalive")]),t._v(" "),a("p",[t._v("让服务器无限期地存活。 请注意，如果启用此选项，则此任务后指定的任何任务将永远不会运行。 默认情况下，一旦grunt的任务完成，Web服务器就会停止。 此选项可更改该行为。")]),t._v(" "),a("h3",{attrs:{id:"_7、livereload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、livereload"}},[t._v("#")]),t._v(" 7、livereload")]),t._v(" "),a("p",[t._v("设置为true或端口号，以使用connect-livereload将实时重新加载脚本标记注入页面。\n这不会执行实时重新加载。 它旨在与grunt-contrib-watch或其他任务一起使用，这些任务将在文件更改时触发实时重新加载服务器。")]),t._v(" "),a("h3",{attrs:{id:"_8、open"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、open"}},[t._v("#")]),t._v(" 8、open")]),t._v(" "),a("p",[t._v("在默认浏览器中打开提供的页面。")]),t._v(" "),a("h3",{attrs:{id:"_9、useavailableport"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、useavailableport"}},[t._v("#")]),t._v(" 9、useAvailablePort")]),t._v(" "),a("p",[t._v("如果为true，则任务将在set port选项后查找下一个可用端口。")]),t._v(" "),a("h3",{attrs:{id:"_10、oncreateserver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10、oncreateserver"}},[t._v("#")]),t._v(" 10、onCreateServer")]),t._v(" "),a("p",[t._v("创建服务器对象后要调用的函数，以允许集成需要访问connect的服务器对象的库。 一个Socket.IO示例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("grunt.initConfig({\n  connect: {\n    server: {\n      options: {\n        port: 8000,\n        hostname: '*',\n        onCreateServer: function(server, connect, options) {\n          var io = require('socket.io').listen(server);\n          io.sockets.on('connection', function(socket) {\n            // do something with socket\n          });\n        }\n      }\n    }\n  }\n});\n")])])]),a("h3",{attrs:{id:"_11、middleware-数组或者方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11、middleware-数组或者方法"}},[t._v("#")]),t._v(" 11、middleware（数组或者方法）")]),t._v(" "),a("p",[t._v("一组连接中间件，使用options.base进行静态文件和目录浏览")])])}),[],!1,null,null,null);e.default=s.exports}}]);