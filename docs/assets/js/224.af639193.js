(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{828:function(a,t,s){"use strict";s.r(t);var e=s(7),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"什么是"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是"}},[a._v("#")]),a._v(" 什么是？")]),a._v(" "),s("p",[a._v("iconizr是一个Node.js模块，它读取SVG图像的文件夹并从中创建一个CSS图标工具包")]),a._v(" "),s("h2",{attrs:{id:"特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[a._v("#")]),a._v(" 特点")]),a._v(" "),s("ol",[s("li",[a._v("已清理的原始SVG图标版本（可选）")]),a._v(" "),s("li",[a._v("一个紧凑的SVG图标精灵")]),a._v(" "),s("li",[a._v("优化的单个PNG图标（可选）")]),a._v(" "),s("li",[a._v("优化的组合PNG图标精灵")]),a._v(" "),s("li",[a._v("可自定义格式的相应CSS样式表")]),a._v(" "),s("li",[a._v("一个HTML片段，包含一些JavaScript，用于异步加载最合适的样式表风格（取决于客户端）")]),a._v(" "),s("li",[a._v("和几个HTML预览文档（取决于您指定的选项），用于预览和测试不同的样式表（可选）。")])]),a._v(" "),s("h2",{attrs:{id:"模板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模板"}},[a._v("#")]),a._v(" 模板")]),a._v(" "),s("p",[a._v("样式表使用Mustache模板呈现，因此您可以控制生成哪些输出格式（以及它们的结构）。 对于它们中的每一个，都会创建一组多个样式表，这与为客户端提供图标的方式不同：")]),a._v(" "),s("ol",[s("li",[a._v("SVG单图像图标（可选）")]),a._v(" "),s("li",[a._v("SVG数据URI")]),a._v(" "),s("li",[a._v("SVG精灵引用")]),a._v(" "),s("li",[a._v("PNG单图图标（可选）")]),a._v(" "),s("li",[a._v("PNG数据URI")]),a._v(" "),s("li",[a._v("PNG精灵引用")])]),a._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("npm install iconizr --save-dev\n")])])]),s("h2",{attrs:{id:"依赖于svg-sprite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#依赖于svg-sprite"}},[a._v("#")]),a._v(" 依赖于svg-sprite")]),a._v(" "),s("p",[a._v("iconizr的渲染配置和输出格式行为与svg-sprite相同，所以请查看其中以供进一步参考。")]),a._v(" "),s("h2",{attrs:{id:"options配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options配置"}},[a._v("#")]),a._v(" options配置")]),a._v(" "),s("h3",{attrs:{id:"_1、quantize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、quantize"}},[a._v("#")]),a._v(" 1、quantize")]),a._v(" "),s("p",[a._v("是否使用pngquant量化PNG图像（减少到8位深度）。 仅当文件大小小于原始文件时才使用量化图像（对于所有PNG文件，情况不一定如此）。 量化也可能影响视觉图像质量，因此请务必将结果与原始图像进行比较。 默认为false。")]),a._v(" "),s("h3",{attrs:{id:"_2、level"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、level"}},[a._v("#")]),a._v(" 2、level")]),a._v(" "),s("p",[a._v("这是PNG文件的优化级别。 它必须介于0和11（含）之间，默认为4，0表示“无优化”，1表示“快速粗糙”，11表示“慢速和高质量”。 将此值设置为较高值可能会导致处理时间过长。 默认为3。")]),a._v(" "),s("h3",{attrs:{id:"_3、embed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、embed"}},[a._v("#")]),a._v(" 3、embed")]),a._v(" "),s("p",[a._v("如果给定，iconizr将使用此值作为路径前缀将样式表嵌入到HTML文档中（用于JavaScript加载器片段）。 默认情况下，当前工作目录和主输出目录之间的路径段将用作根相对嵌入路径（即将path / to / css作为输出目录将导致加载器片段期望CSS样式表位于/path/to/css/stylesheet-flavour.css）。 您可以指定一个期间。 在这里制作相对于HTML文档的嵌入路径（即./stylesheet-flavour.css），或使用任何其他相对路径（例如../resources用于嵌入路径../ resources / stylesheet-flavor的CSS）。")]),a._v(" "),s("h3",{attrs:{id:"_4、svg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、svg"}},[a._v("#")]),a._v(" 4、svg")]),a._v(" "),s("p",[a._v("这是SVG数据URI可能具有的最大长度。 如果只有一个图标超过此阈值，则此图标集的所有数据URI将更改为外部SVG精灵引用。 默认为1048576（1MB），最小值为1024（1kB）。")]),a._v(" "),s("h3",{attrs:{id:"_5、png"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、png"}},[a._v("#")]),a._v(" 5、png")]),a._v(" "),s("p",[a._v("这是PNG数据URI可能具有的最大长度。 如果只有一个图标超过此阈值，则此图标集的所有数据URI都将更改为外部PNG精灵引用。 默认为32768（32KB = Internet Explorer 8限制），最小值为1024（1kB）。")]),a._v(" "),s("h3",{attrs:{id:"_6、preview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、preview"}},[a._v("#")]),a._v(" 6、preview")]),a._v(" "),s("p",[a._v("如果给定而非空，则将呈现一组预览HTML文档，可用于预览和测试图标工具包。 给定值将用作相对于主输出目录的目录路径，而主预览文档将以CSS文件名（{render：{css：'...'}}）或前缀选项（在 case没有生成CSS文件）。")]),a._v(" "),s("h3",{attrs:{id:"_7、loader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、loader"}},[a._v("#")]),a._v(" 7、loader")]),a._v(" "),s("p",[a._v("使用此选项，您可以控制JavaScript加载器片段的格式和目标：loader.type可以是“html”（对于HTML加载器片段;这是默认值）或“js”（仅适用于JavaScript文件）。 Boolean loader.minify控制加载器脚本是否会变得丑陋（默认为TRUE）。 最后，loader.dest是将写入加载程序资源的路径（相对于主输出目录）（默认为“。”）。")])])}),[],!1,null,null,null);t.default=r.exports}}]);