(window.webpackJsonp=window.webpackJsonp||[]).push([[225],{928:function(t,s,a){"use strict";a.r(s);var e=a(7),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"依赖phantomjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖phantomjs"}},[t._v("#")]),t._v(" 依赖phantomjs")]),t._v(" "),a("h2",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("p",[t._v("是一个Node.js模块，它读取SVG图像的文件夹，优化它们并创建一个SVG精灵以及合适的样式表资源（例如CSS，Sass，LESS或Stylus）。 通过提供适当的Mustache模板，可以轻松添加其他格式。")]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm install svg-sprite --save-dev\n")])])]),a("h2",{attrs:{id:"options配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options配置"}},[t._v("#")]),t._v(" options配置")]),t._v(" "),a("h3",{attrs:{id:"_1、render"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、render"}},[t._v("#")]),t._v(" 1、render")]),t._v(" "),a("p",[t._v("您可以提供一个配置对象，该对象控制生成哪些输出文件和格式以及使用哪些Mustache呈现模板进行生成。 它默认为{css：true}，这意味着将生成具有默认名称的CSS文件到默认位置。 此选项自v0.1.0起可用; 在此之前，现在已弃用的选项css，sass，sassout，less和lessout用于控制渲染行为。 有关所有渲染选项的说明，请参见下文。")]),t._v(" "),a("h3",{attrs:{id:"_2、variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、variables"}},[t._v("#")]),t._v(" 2、variables")]),t._v(" "),a("p",[t._v("使用此选项将其他自定义变量传递给Mustache")]),t._v(" "),a("h3",{attrs:{id:"_3、spritedir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、spritedir"}},[t._v("#")]),t._v(" 3、spritedir")]),t._v(" "),a("p",[t._v("创建SVG精灵的主输出目录的目录。 默认为'svg'。 从版本v0.1.0开始，您还可以提供空字符串或。 完全避免创建子目录。")]),t._v(" "),a("h3",{attrs:{id:"_4、sprite"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、sprite"}},[t._v("#")]),t._v(" 4、sprite")]),t._v(" "),a("p",[t._v("SVG精灵的文件名（在.svg扩展名之前）。 默认为'sprite'。")]),t._v(" "),a("h3",{attrs:{id:"_5、prefix"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、prefix"}},[t._v("#")]),t._v(" 5、prefix")]),t._v(" "),a("p",[t._v("所有CSS规则的前缀（所有输出格式）。 默认为'svg'（结果为.svg- * CSS选择器）")]),t._v(" "),a("h3",{attrs:{id:"_6、common"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、common"}},[t._v("#")]),t._v(" 6、common")]),t._v(" "),a("p",[t._v("如果给定而不是空，它将用于创建一个CSS规则，该规则通常为所有精灵图像定义背景图像和背景重复属性（从而通过不必为每个精灵图像重复这些属性来节省一些字节）")]),t._v(" "),a("h3",{attrs:{id:"_7、maxwidth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、maxwidth"}},[t._v("#")]),t._v(" 7、maxwidth")]),t._v(" "),a("p",[t._v("单个SVG图像的最大宽度。 如有必要，将缩小规模。 默认为1000。")]),t._v(" "),a("h3",{attrs:{id:"_8、maxheight"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、maxheight"}},[t._v("#")]),t._v(" 8、maxheight")]),t._v(" "),a("p",[t._v("单个SVG图像的最大高度。 如有必要，将缩小规模。 默认为1000。")]),t._v(" "),a("h3",{attrs:{id:"_9、padding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、padding"}},[t._v("#")]),t._v(" 9、padding")]),t._v(" "),a("p",[t._v("在精灵中单个SVG图像的padding。 默认为0。")]),t._v(" "),a("h3",{attrs:{id:"_10、layout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10、layout"}},[t._v("#")]),t._v(" 10、layout")]),t._v(" "),a("p",[t._v("在精灵中排列单个SVG图像的方法。 可以是“垂直”，“水平”或“对角线”，默认为垂直。")]),t._v(" "),a("h3",{attrs:{id:"_11、pseudo-伪类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11、pseudo-伪类"}},[t._v("#")]),t._v(" 11、pseudo（伪类）")]),t._v(" "),a("p",[t._v("用于分隔文件名中的CSS伪类的字符。默认为〜。")]),t._v(" "),a("h3",{attrs:{id:"_12、dims"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12、dims"}},[t._v("#")]),t._v(" 12、dims")]),t._v(" "),a("p",[t._v("如果存在且等于true，则将呈现其他CSS规则（所有输出格式），用于设置单个精灵图像的尺寸。 您可以使用这些CSS规则来适当调整元素大小。 通常，后缀-dims将与图像的常规CSS选择器一起使用，但请查看生成的CSS文件以及有关CSS伪类的一些特殊规则的iconizr文档。")]),t._v(" "),a("h3",{attrs:{id:"_13、keep"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13、keep"}},[t._v("#")]),t._v(" 13、keep")]),t._v(" "),a("p",[t._v("如果存在且等于true，则用于创建精灵的单个优化的中间SVG图像将不会被丢弃，而是保留在spritedir中。（保留处理过程中的文件）")]),t._v(" "),a("h3",{attrs:{id:"_14、recursive-递归查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14、recursive-递归查找"}},[t._v("#")]),t._v(" 14、recursive（递归查找）")]),t._v(" "),a("p",[t._v("如果存在且等于true，则将递归扫描输入目录以查找子目录中的SVG文件。 目录名称将用于构造精灵图像CSS类名称，由连字符连接。")]),t._v(" "),a("h3",{attrs:{id:"_15、verbose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15、verbose"}},[t._v("#")]),t._v(" 15、verbose")]),t._v(" "),a("p",[t._v("将此值设置为> 0以获得一些输出。 默认为0。")]),t._v(" "),a("h3",{attrs:{id:"_16、cleanwith"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16、cleanwith"}},[t._v("#")]),t._v(" 16、cleanwith")]),t._v(" "),a("p",[t._v("选择用于优化单个SVG图像的模块。 目前，支持Node.js模块svg-cleaner（松散地基于Scour）和SVGO，因此使用scour或svgo作为此选项。 将其设置为FALSE或NULL以完全跳过SVG优化。 默认为svgo（从版本v0.1.1开始）。 注意：目前不支持Scour（直到有更新版本可用）")]),t._v(" "),a("h3",{attrs:{id:"_17、cleanconfig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17、cleanconfig"}},[t._v("#")]),t._v(" 17、cleanconfig")]),t._v(" "),a("p",[t._v("您可以提供传递给SVG优化器的配置对象（目前，只有SVGO支持此功能）。 它默认为{plugins：[{moveGroupAttrsToElems：false}]}。 在命令行上使用时，请在此处提供有效的JSON编码字符串。")]),t._v(" "),a("h2",{attrs:{id:"例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例"}},[t._v("#")]),t._v(" 例")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var SVGSprite = require('svg-sprite');\nvar options = {\n    render: {\n        css: false,\n        scss: 'sass/output/directory/',\n        less: {\n            template: 'path/to/less/mustache/template.less',\n            dest: '/absolute/path/to/dest/file'\n        }\n    }\n    /* Further configuration options, see below ... */\n};\n    callback = function (err, results) { /*\n\tIf no error occurs, `results` will be a JSON object like this one:\n\t\n\t{\n\t   success\t\t\t: true,\t\t// Overall success\n\t   length\t\t\t: 3,\t\t// Total number of files written\n\t   files\t\t\t: {\t\t\t// Files along with their file size in bytes\n\t      '/path/to/your/cwd/css/output/directory/svg/sprite.svg'\t: 436823,\n\t      '/path/to/your/cwd/css/output/directory/sprite.css'\t\t: 1821,\n\t      '/path/to/your/cwd/sass/output/directory/_sprite.scss'\t: 2197\n\t   }\n\t}\n\t\n*/\n    };\nSVGSprite.createSprite('path/with/svg/images', 'css/output/directory', options, callback);\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);