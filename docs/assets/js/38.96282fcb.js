(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{517:function(t,s,a){"use strict";a.r(s);var e=a(7),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"head"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[t._v("#")]),t._v(" HEAD")]),t._v(" "),a("p",[t._v("在Git中，用"),a("code",[t._v("HEAD")]),t._v("表示当前版本，也就是最新的提交，上一个版本就是"),a("code",[t._v("HEAD^")]),t._v("，上上一个版本就是"),a("code",[t._v("HEAD^^")]),t._v("，当然往上100个版本写100个"),a("code",[t._v("^")]),t._v("比较容易数不过来，所以写成"),a("code",[t._v("HEAD~100")])]),t._v(" "),a("h3",{attrs:{id:"配置姓名邮箱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置姓名邮箱"}},[t._v("#")]),t._v(" 配置姓名邮箱")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你的姓名"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你的邮箱"')]),t._v("\n// 全局\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你的姓名"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"你的邮箱"')]),t._v("\n")])])]),a("h3",{attrs:{id:"git-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),a("p",[t._v("回退版本")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认就是-mixed参数。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#回退至上个版本，表示将本地版本库的头指针全部重置到上个版本，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#且将这次提交之后的所有变更都移动到工作区(之前暂存区丢失和工作区还继续存在)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#工作区已经有冲突的文件，则以工作区的为准，变更的将丢失")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --mixed HEAD^ \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#回退至三个版本之前，表示将本地版本库的头指针全部重置到三个版本之前，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#且将这次提交之后的所有变更都移动到暂存区(之前暂存和工作区还继续存在)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#暂存区已经有冲突的文件，则以暂存的为准，变更的将丢失")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --soft HEAD~3 \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#彻底回退到指定commit-id的状态，暂存区和工作区也会变为指定commit-id版本的内容,Untracked files还继续存在")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果reset到已经push的版本，此时如果pull,会将本地仓库同步同步成远程，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\t\t\t\t\t\t 此时如果push -f,会将远程同步成本地")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\t\t\t\t\t\t 此时如果push 'Updates were rejected ... current branch is behind'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n")])])]),a("h3",{attrs:{id:"git-checkout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout"}},[t._v("#")]),t._v(" git checkout")]),t._v(" "),a("p",[t._v("撤回并覆盖工作区的修改（回到最近一次"),a("code",[t._v("git commit")]),t._v("或"),a("code",[t._v("git add")]),t._v("时的状态）")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从(本/远)仓库取出test.txt替换到工作区，并删除暂存区的test.txt")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -- test.txt\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从暂存区取出test.txt替换到工作区（如果暂存区没有就从(本/远)仓库取，就同上）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout –- test.txt\n")])])]),a("p",[t._v("切换分支（不加--）")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h3",{attrs:{id:"替换上一次提交-不管是否提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#替换上一次提交-不管是否提交"}},[t._v("#")]),t._v(" 替换上一次提交(不管是否提交)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git commit --amend --allow-empty -m 提交语句\n")])])]),a("h3",{attrs:{id:"关联远程分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关联远程分支"}},[t._v("#")]),t._v(" 关联远程分支")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -u origin/mybranch\n// 或\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin/mybranch -u\n")])])]),a("p",[t._v("关联之后， git branch -vv （展示本地分支关联远程仓库的情况）就可以展示关联的远程分支名了，"),a("br"),t._v("\n同时推送到远程仓库直接： git push ，不需要指定远程仓库了")]),t._v(" "),a("h3",{attrs:{id:"切回到某个标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切回到某个标签"}},[t._v("#")]),t._v(" 切回到某个标签")]),t._v(" "),a("p",[t._v("一般上线之前都会打 tag，就是为了防止上线后出现问题，方便快速回退到上一版本。"),a("br"),t._v("\n下面的命令是回 到某一标签下的状态：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b branch_name tag_name\n")])])]),a("h3",{attrs:{id:"git-revert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-revert"}},[t._v("#")]),t._v(" git revert")]),t._v(" "),a("p",[t._v("以新增一个 commit 的方式还原某一个 commit 的修改，还原到暂存区"),a("br"),t._v("\n修改之前必须保持暂存区和工作区干净")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert --abort // 取消revert\n")])])]),a("h3",{attrs:{id:"git-restore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-restore"}},[t._v("#")]),t._v(" git restore")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#从本地仓库取出文件覆盖工作区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" restore "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(".txt\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#从暂存区取出文件不覆盖工作区")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" restore --staged "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(".txt\n")])])]),a("h3",{attrs:{id:"cherry-pick"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cherry-pick"}},[t._v("#")]),t._v(" cherry-pick")]),t._v(" "),a("p",[t._v("把 A 分支的某一个 commit，放到 B 分支上")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branchB-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cherry-pick "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit-id-from-B"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h3",{attrs:{id:"stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stash"}},[t._v("#")]),t._v(" stash")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash\t// 存储所有的文件\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash -u\t// \t存储所有的文件包括未跟踪的\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list // 展示所有的stashes\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("stash@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" // 回到某个 stash 的状态\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),t._v(" // 删除所有的stash\n")])])]),a("h3",{attrs:{id:"git-rebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[t._v("#")]),t._v(" git rebase")]),t._v(" "),a("p",[t._v("变基，使git提交纪录成一条直线")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull --rebase\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果有冲突先解决冲突（可能要解决多次），然后git add提交，不用commit")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等价于 git fetch --all && git rebase branch")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase --continue\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果不想解决冲突的时候不想继续rebase")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase --abort\n")])])]),a("p",[t._v("执行 git pull --rebase 的时候必须保持本地目录干净"),a("br"),t._v("\n即：不能存在状态为 modified 的文件。（存在Untracked files是没关系的）")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull --rebase\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 结果如下")]),t._v("\nerror: cannot pull with rebase: You have unstaged changes.\nerror: please commit or stash them.\n")])])]),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903895160881166",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文献"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://git-scm.com/book/zh/v2/Git-%E5%88%86%E6%94%AF-%E5%8F%98%E5%9F%BA",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文献"),a("OutboundLink")],1)]),t._v(" "),a("v-alert",{attrs:{type:"warning",text:"",icon:"mdi-alert-outline"}},[t._v("变基 vs. 合并\n"),a("p",[t._v("总的原则是，只对尚未推送或分享给别人的本地修改执行变基操作清理历史， 从不对已推送至别处的提交执行变基操作，这样，你才能享受到两种方式带来的便利。")])]),t._v(" "),a("h3",{attrs:{id:"取消merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#取消merge"}},[t._v("#")]),t._v(" 取消merge")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge --abort\n")])])]),a("h3",{attrs:{id:"强制推送"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制推送"}},[t._v("#")]),t._v(" 强制推送")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h3",{attrs:{id:"日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志"}},[t._v("#")]),t._v(" 日志")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --pretty"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline\t// 简短版本的日志\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog //\t包括更改了HEAD的日志\n")])])])],1)}),[],!1,null,null,null);s.default=r.exports}}]);