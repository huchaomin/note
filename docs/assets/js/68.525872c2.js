(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{547:function(a,t,e){"use strict";e.r(t);var s=e(7),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h3",{attrs:{id:"综合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#综合"}},[a._v("#")]),a._v(" 综合")]),a._v(" "),e("p",[a._v("通过在 import 中添加注释，我们可以进行诸如给 chunk 命名或选择不同模式的操作")]),a._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 单个目标")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/* webpackIgnore: true */")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'ignored-module.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v('/* webpackChunkName: "my-chunk-name" */')]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v('/* webpackMode: "lazy" */')]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v('/* webpackExports: ["default", "named"] */')]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'module'")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 多个可能的目标")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/* webpackInclude: /\\.json$/ */")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/* webpackExclude: /\\.noimport\\.json$/ */")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v('/* webpackChunkName: "my-chunk-name" */')]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v('/* webpackMode: "lazy" */')]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/* webpackPrefetch: true */")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/* webpackPreload: true */")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[a._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("./locale/")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[a._v("${")]),a._v("language"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[a._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[a._v("`")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),e("h3",{attrs:{id:"webpackignore"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpackignore"}},[a._v("#")]),a._v(" webpackIgnore")]),a._v(" "),e("ul",[e("li",[a._v("设置为 true 时，禁用动态导入解析")]),a._v(" "),e("li",[a._v("设置为 true 则不进行代码分割")])]),a._v(" "),e("h3",{attrs:{id:"webpackchunkname"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpackchunkname"}},[a._v("#")]),a._v(" webpackChunkName")]),a._v(" "),e("p",[a._v("新 chunk 的名称")]),a._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// your code")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("default")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" _ "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("await")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v('/* webpackChunkName: "lodash" */')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'lodash'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// webpack.config.js")]),a._v("\noutput"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ...")]),a._v("\n  chunkFilename"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[name].vendor.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// bundle")]),a._v("\nlodash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("vendor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("js\n")])])]),e("h3",{attrs:{id:"webpackmode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpackmode"}},[a._v("#")]),a._v(" webpackMode")]),a._v(" "),e("ul",[e("li",[e("code",[a._v('"lazy"')]),a._v("（默认）：为每个 import() 导入的模块，生成一个可延迟加载(lazy-loadable) chunk")]),a._v(" "),e("li",[e("code",[a._v('"lazy-once"')]),a._v("：生成一个可以满足所有 import() 调用的单个可延迟加载(lazy-loadable) chunk。"),e("br"),a._v("\n此 chunk 将在第一次 import() 调用时获取，随后的 import() 调用将使用相同的网络响应。"),e("br"),a._v("\n注意，这种模式仅在部分动态语句中有意义，例如 import("),e("code",[a._v("./locales/${language}.json")]),a._v(")，其中可能含有多个被请求的模块路径。")]),a._v(" "),e("li",[e("code",[a._v('"eager"')]),a._v("：不会生成额外的 chunk，所有模块都被当前 chunk 引入，并且没有额外的网络请求。"),e("br"),a._v("\n仍然会返回 Promise，但是是 resolved 状态。和静态导入相对比，在调用 import（）完成之前，该模块不会被执行。")]),a._v(" "),e("li",[e("code",[a._v('"weak"')]),a._v("：尝试加载模块，如果该模块函数已经以其他方式加载（即，另一个 chunk 导入过此模块，或包含模块的脚本被加载）。"),e("br"),a._v("\n仍然会返回 Promise，但是只有在客户端上已经有该 chunk 时才成功解析。"),e("br"),a._v("\n如果该模块不可用，Promise 将会是 rejected 状态，并且网络请求永远不会执行。"),e("br"),a._v("\n当需要的 chunks 始终在（嵌入在页面中的）初始请求中手动提供，而不是在应用程序导航在最初没有提供的模块导入的情况触发，这对于通用渲染（SSR）是非常有用的。")])]),a._v(" "),e("h3",{attrs:{id:"webpackinclude-与-webpackexclude"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpackinclude-与-webpackexclude"}},[a._v("#")]),a._v(" webpackInclude 与 webpackExclude")]),a._v(" "),e("p",[a._v("使用 webpackInclude and webpackExclude 选项可让你添加正则表达式模式，以减少 webpack 打包导入的文件数量")]),a._v(" "),e("h3",{attrs:{id:"webpackprefetch-与-webpackpreload"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpackprefetch-与-webpackpreload"}},[a._v("#")]),a._v(" webpackPrefetch 与 webpackPreload")]),a._v(" "),e("p",[a._v("设置模块的预加载方式")])])}),[],!1,null,null,null);t.default=n.exports}}]);