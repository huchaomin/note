import{r as o,o as r,c as s,f as l,g as e,a9 as t}from"./vendor.js";const i=t("h2",{id:"1-qtabs",class:"doc-heading"},"QTabs",-1),c=t("h3",{id:"2-props",class:"doc-heading"},"Props",-1),h=t("thead",null,[t("tr",null,[t("th",{class:"text-left"},"Name"),t("th",{class:"text-left"},"Type"),t("th",{class:"text-left"},"Default"),t("th",{class:"text-left"},"Description")])],-1),p=t("tbody",null,[t("tr",null,[t("td",null,"model-value"),t("td",null,"Number/String/null/undefined"),t("td"),t("td",null,"current panel name")]),t("tr",null,[t("td",null,"breakpoint"),t("td",null,"Number/String"),t("td",null,"600"),t("td",null,"Breakpoint (in pixels) of tabs container width at which the tabs automatically turn to a justify alignment")]),t("tr",null,[t("td",null,"vertical"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Display tabs vertically")]),t("tr",null,[t("td",null,"outside-arrows"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Reserve space for arrows to place them on each side of the tabs (the arrows fade when inactive)")]),t("tr",null,[t("td",null,"mobile-arrows"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Force display of arrows (if needed) on mobile")]),t("tr",null,[t("td",null,"align"),t("td",null,"String"),t("td",null,"\u2018center\u2019"),t("td",null,"Horizontal alignment the tabs within the tabs container")]),t("tr",null,[t("td",null,"stretch"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"When used on flexbox parent, tabs will stretch to parent\u2019s height")]),t("tr",null,[t("td",null,"shrink"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"By default, QTabs is set to grow to the available space; However, you can reverse that with this prop; Useful (and required) when placing the component in a QToolbar")]),t("tr",null,[t("td",null,"left-icon"),t("td",null,"String"),t("td",null,"\u2018arrow_left\u2019"),t("td",null,"Icon to use for the left arrow (when needed)")]),t("tr",null,[t("td",null,"right-icon"),t("td",null,"String"),t("td",null,"\u2018arrow_right\u2019"),t("td",null,"Icon to use for the right arrow (when needed)")]),t("tr",null,[t("td",null,"switch-indicator"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Switches the indicator position (on left of tab for vertical mode or above the tab for default horizontal mode)")]),t("tr",null,[t("td",null,"narrow-indicator"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Allows the indicator to be the same width as the tab\u2019s content (text or icon), instead of the whole width of the tab")]),t("tr",null,[t("td",null,"inline-label"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Allows the text to be inline with the icon, should one be used")]),t("tr",null,[t("td",null,"no-caps"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Turns off capitalizing all letters within the tab (which is the default)")]),t("tr",null,[t("td",null,"active-color"),t("td",null,"String"),t("td",null,"\u2018primary\u2019"),t("td",null,"The color to be attributed to the text of the active tab")]),t("tr",null,[t("td",null,"active-bg-color"),t("td",null,"String"),t("td",null,"\u2018primary\u2019"),t("td",null,"The color to be attributed to the background of the active tab")]),t("tr",null,[t("td",null,"indicator-color"),t("td",null,"String"),t("td",null,"\u2018primary\u2019"),t("td",null,"The color to be attributed to the indicator (the underline) of the active tab")]),t("tr",null,[t("td",null,"content-class"),t("td",null,"String"),t("td"),t("td",null,"Class definitions to be attributed to the content wrapper")]),t("tr",null,[t("td",null,"active-class"),t("td",null,"String"),t("td"),t("td",null,"The class to be set on the active tab")]),t("tr",null,[t("td",null,"dense"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Dense mode; occupies less space")])],-1),b=t("h2",{id:"3-qtab",class:"doc-heading"},"QTab",-1),f=t("h3",{id:"4-props",class:"doc-heading"},"Props",-1),g=t("thead",null,[t("tr",null,[t("th",{class:"text-left"},"Name"),t("th",{class:"text-left"},"Type"),t("th",{class:"text-left"},"Default"),t("th",{class:"text-left"},"Description")])],-1),m=t("tbody",null,[t("tr",null,[t("td",null,"name"),t("td",null,"Number/String"),t("td"),t("td",null,"Unique name of the tab")]),t("tr",null,[t("td",null,"tabindex"),t("td",null,"Number/String"),t("td",null,"0"),t("td",null,"tabindex HTML attribute")]),t("tr",null,[t("td",null,"disable"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Disable this tab")]),t("tr",null,[t("td",null,"content-class"),t("td",null,"String"),t("td"),t("td",null,"Class definitions to be attributed to the content wrapper")]),t("tr",null,[t("td",null,"ripple"),t("td",null,"Boolean/Object"),t("td"),t("td",null,"Configure material ripple")]),t("tr",null,[t("td",null,"icon"),t("td",null,"String"),t("td"),t("td",null,"Icon name")]),t("tr",null,[t("td",null,"label"),t("td",null,"String"),t("td"),t("td",null,"Tab label")]),t("tr",null,[t("td",null,"alert"),t("td",null,"Boolean/String"),t("td"),t("td",null,"Adds an alert symbol to the tab")]),t("tr",null,[t("td",null,"alert-icon"),t("td",null,"String"),t("td"),t("td",null,"Icon to use for the alert")]),t("tr",null,[t("td",null,"no-caps"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Turns off capitalizing all letters within the tab (which is the default)")])],-1),_=t("h2",{id:"5-qroutetab",class:"doc-heading"},"QRouteTab",-1),w=t("h3",{id:"6-props",class:"doc-heading"},"Props",-1),v=t("thead",null,[t("tr",null,[t("th",{class:"text-left"},"Name"),t("th",{class:"text-left"},"Type"),t("th",{class:"text-left"},"Default"),t("th",{class:"text-left"},"Description")])],-1),x=t("tbody",null,[t("tr",null,[t("td",null,"to"),t("td",null,"String/Object"),t("td"),t("td",null,"Equivalent to Vue Router <router-link> \u2018to\u2019 property;")]),t("tr",null,[t("td",null,"exact"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Equivalent to Vue Router <router-link> \u2018exact\u2019 property;")]),t("tr",null,[t("td",null,"replace"),t("td",null,"Boolean"),t("td",null,"false"),t("td",null,"Equivalent to Vue Router <router-link> \u2018replace\u2019 property;")]),t("tr",null,[t("td",null,"active-class"),t("td",null,"String"),t("td"),t("td",null,"Equivalent to Vue Router <router-link> \u2018active-class\u2019 property")]),t("tr",null,[t("td",null,"exact-active-class"),t("td",null,"String"),t("td"),t("td",null,"Equivalent to Vue Router <router-link> \u2018active-class\u2019 property")]),t("tr",null,[t("td",null,"href"),t("td",null,"String"),t("td"),t("td",null,"Native <a> link href attribute; Has priority over the \u2018to\u2019/\u2018exact\u2019/\u2018replace\u2019/\u2018active-class\u2019/\u2018exact-active-class\u2019 props")]),t("tr",null,[t("td",null,"target"),t("td",null,"String"),t("td"),t("td",null,"Native <a> link target attribute")])],-1),T={__name:"tabs",setup(y){const d=[{id:"doc-title",title:"tabs"},{id:"1-qtabs",title:"1. QTabs"},{id:"2-props",title:"1.1. Props",sub:!0},{id:"3-qtab",title:"2. QTab"},{id:"4-props",title:"2.1. Props",sub:!0},{id:"5-qroutetab",title:"3. QRouteTab"},{id:"6-props",title:"3.1. Props",sub:!0}];return(B,S)=>{const n=o("q-markup-table"),a=o("c-scroll-area"),u=o("doc-page");return r(),s(u,{desc:"",toc:d},{default:l(()=>[i,c,e(a,{"fit-content-height":"",class:"q-mt-md q-mb-sm","content-style":{paddingBottom:"10px"}},{default:l(()=>[e(n,{flat:"",bordered:"",dense:""},{default:l(()=>[h,p]),_:1})]),_:1}),b,f,e(a,{"fit-content-height":"",class:"q-mt-md q-mb-sm","content-style":{paddingBottom:"10px"}},{default:l(()=>[e(n,{flat:"",bordered:"",dense:""},{default:l(()=>[g,m]),_:1})]),_:1}),_,w,e(a,{"fit-content-height":"",class:"q-mt-md q-mb-sm","content-style":{paddingBottom:"10px"}},{default:l(()=>[e(n,{flat:"",bordered:"",dense:""},{default:l(()=>[v,x]),_:1})]),_:1})]),_:1})}}};export{T as default};
