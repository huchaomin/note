import{r as d,o as a,c,f as t,g as n,aa as l,v as e}from"./vendor-b8e3fcbe.js";const p=l("h2",{id:"1-props",class:"doc-heading"},"props",-1),f=l("thead",null,[l("tr",null,[l("th",{class:"text-left"},"name"),l("th",{class:"text-left"},"type"),l("th",{class:"text-left"},"default"),l("th",{class:"text-left"},"description")])],-1),h=l("tbody",null,[l("tr",null,[l("td",null,"label"),l("td",null,"String"),l("td"),l("td",null,"Label to display")]),l("tr",null,[l("td",null,"stack-label"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Stack label on top of field")]),l("tr",null,[l("td",null,"label-slot"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Enables label slot; You need to set it to force use of the \u2018label\u2019 slot if the \u2018label\u2019 prop is not set")]),l("tr",null,[l("td",null,"name"),l("td",null,"String"),l("td"),l("td",null,"\u539F\u751Fname\u5C5E\u6027\uFF0Ctakes the value of \u2018for\u2019 prop, if it exists")]),l("tr",null,[l("td",null,"for"),l("td",null,"String"),l("td"),l("td",null,"\u6DFB\u52A0\u8868\u5355\u5143\u7D20\u7684id\u548Clabel\u7684for\u5C5E\u6027")]),l("tr",null,[l("td",null,"autocomplete"),l("td",null,"String"),l("td"),l("td",null,"\u539F\u751Fautocomplete\u5C5E\u6027")]),l("tr",null,[l("td",null,"tabindex"),l("td",null,"Number/String"),l("td",null,"0"),l("td",null,"\u539F\u751Ftabindex\u5C5E\u6027")]),l("tr",null,[l("td",null,"model-value"),l("td",null,"Any"),l("td"),l("td",null,"Model of the component; Must be Array if using \u2018multiple\u2019 prop; Either use this property (along with a listener for \u2018update:modelValue\u2019 event) OR use v-model directive")]),l("tr",null,[l("td",null,"options"),l("td",null,"Array"),l("td"),l("td",null,"Available options that the user can select from")]),l("tr",null,[l("td",null,"disable"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Disable the component")]),l("tr",null,[l("td",null,"readonly"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Make the component readonly")]),l("tr",null,[l("td",null,"display-value"),l("td",null,"String/Number"),l("td"),l("td",null,"\u600E\u4E48\u5C55\u793Avalue, if not using \u2018selected\u2019 slot/scoped slot and if not using \u2018use-chips\u2019 prop")]),l("tr",null,[l("td",null,"display-value-html"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Display \u2018display-value\u2019 as HTML")]),l("tr",null,[l("td",null,"option-value"),l("td",null,"Function/String"),l("td",null,"\u2018value\u2019"),l("td",null,"Function or property name to use for value of an option; If using a function, it will receive the option object as first parameter")]),l("tr",null,[l("td",null,"option-label"),l("td",null,"Function/String"),l("td",null,"\u2018label\u2019"),l("td",null,"Function or property name to use for label of an option; If using a function, it will receive the option object as first parameter")]),l("tr",null,[l("td",null,"option-disable"),l("td",null,"Function/String"),l("td",null,"\u2018disable\u2019"),l("td",null,"Function or property name to use for disabling an option; If using a function, it will receive the option object as first parameter, If return true, the current option will be disabled")]),l("tr",null,[l("td",null,"multiple"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Allow multiple values to be selected")]),l("tr",null,[l("td",null,"max-values"),l("td",null,"Number/String"),l("td"),l("td",null,"Maximum number of values that can be selected")]),l("tr",null,[l("td",null,"error"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Does field have validation errors?")]),l("tr",null,[l("td",null,"error-message"),l("td",null,"String"),l("td"),l("td",null,"Validation error message(gets displayed only if \u2018error\u2019 is set to \u2018true\u2019)")]),l("tr",null,[l("td",null,"no-error-icon"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Hide error icon")]),l("tr",null,[l("td",null,"rules"),l("td",null,"Array"),l("td"),l("td",null,"Validation rules")]),l("tr",null,[l("td",null,"reactive-rules"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"the rules change will trigger a validation")]),l("tr",null,[l("td",null,"lazy-rules"),l("td",null,"Boolean/String"),l("td",null,"false"),l("td",null,"true: field loses focus for first time.")]),l("tr",null,[l("td"),l("td"),l("td"),l("td",null,"\u2018ondemand\u2019: component\u2019s validate() method is manually called or when the wrapper QForm submits itself")]),l("tr",null,[l("td",null,"loading"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Show a loading indicator")]),l("tr",null,[l("td",null,"clearable"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Show a clear button, When clicked, model \u53D8\u4E3A null")]),l("tr",null,[l("td",null,"clear-icon"),l("td",null,"String"),l("td"),l("td",null,"Override default clear icon")]),l("tr",null,[l("td",null,"autofocus"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Focus the field on initial render")]),l("tr",null,[l("td",null,"dropdown-icon"),l("td",null,"String"),l("td"),l("td",null,"Override default dropdown icon")]),l("tr",null,[l("td",null,"hide-dropdown-icon"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Hide the dropdown icon")]),l("tr",null,[l("td",null,"use-chips"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Use chips instead of a text field")]),l("tr",null,[l("td",null,"new-value-mode"),l("td",null,"String"),l("td"),l("td",null,"\u6DFB\u52A0\u65B0\u503C\u7684\u6A21\u5F0F add/add-unique/toggle")]),l("tr",null,[l("td",null,"transition-show"),l("td",null,"String"),l("td"),l("td",null,"Transition to use when showing the dropdown")]),l("tr",null,[l("td",null,"transition-hide"),l("td",null,"String"),l("td"),l("td",null,"Transition to use when hiding the dropdown")]),l("tr",null,[l("td",null,"transition-duration"),l("td",null,"Number/String"),l("td"),l("td",null,"Transition duration in milliseconds, without unit")]),l("tr",null,[l("td",null,"behavior"),l("td",null,"String"),l("td",null,"\u2018menu\u2019"),l("td",null,"\u2018menu\u2019 or \u2018dialog\u2019")]),l("tr",null,[l("td",null,"hint"),l("td",null,"String"),l("td"),l("td",null,"Hint text")]),l("tr",null,[l("td",null,"hide-hint"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Enables bottom slots (\u2018error\u2019, \u2018hint\u2019, \u2018counter\u2019)")]),l("tr",null,[l("td",null,"prefix"),l("td",null,"String"),l("td"),l("td",null,"Prefix")]),l("tr",null,[l("td",null,"suffix"),l("td",null,"String"),l("td"),l("td",null,"Suffix")]),l("tr",null,[l("td",null,"bottom-slots"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Display the slots at the bottom of the field")]),l("tr",null,[l("td",null,"counter"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Show an automatic counter on bottom right")]),l("tr",null,[l("td",null,"use-input"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Use an input tag where users can type")]),l("tr",null,[l("td",null,"input-debounce"),l("td",null,"Number/String"),l("td",null,"500"),l("td",null,"Debounce delay in milliseconds")]),l("tr",null,[l("td",null,"emit-value"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"true\u65F6\uFF0Coptions\u4E3A\u5BF9\u8C61\u96C6\u5408\u7684\u8BDD\uFF0C\u629B\u51FAvalue\uFF0C\u5426\u5219\u629B\u51FA obj,\u6B64\u65F6\u5C55\u793A\u7684\u662Fvalue,\u4E0D\u662Foption\u91CC\u9762\u7684label,\u9700\u914D\u5408map-options \u4F7F\u7528")]),l("tr",null,[l("td",null,"map-options"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"map labels of model from \u2018options\u2019 Array")]),l("tr",null,[l("td",null,"options-dense"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Dense mode for options list")]),l("tr",null,[l("td",null,"options-dark"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Dark mode for options list")]),l("tr",null,[l("td",null,"options-selected-class"),l("td",null,"String"),l("td"),l("td",null,"Class to apply to selected option")]),l("tr",null,[l("td",null,"options-html"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Treat option label as HTML code")]),l("tr",null,[l("td",null,"options-cover"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Cover the input field with the options list(will not work along with \u2018use-input\u2019 prop for obvious reasons)")]),l("tr",null,[l("td",null,"menu-shrink"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"(only in menu mode)")]),l("tr",null,[l("td",null,"menu-anchor"),l("td",null,"String"),l("td"),l("td",null,"(only in menu mode)")]),l("tr",null,[l("td",null,"menu-self"),l("td",null,"String"),l("td"),l("td",null,"(only in menu mode)")]),l("tr",null,[l("td",null,"menu-offset"),l("td",null,"Array"),l("td"),l("td",null,"(only in menu mode)")]),l("tr",null,[l("td",null,"color"),l("td",null,"String"),l("td"),l("td",null,"Color name for component from the Quasar Color Palette")]),l("tr",null,[l("td",null,"label-color"),l("td",null,"String"),l("td"),l("td",null,"Color name for component label")]),l("tr",null,[l("td",null,"bg-color"),l("td",null,"String"),l("td"),l("td",null,"Color name for component background")]),l("tr",null,[l("td",null,"dark"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Use dark theme")]),l("tr",null,[l("td",null,"standout"),l("td",null,"Boolean/String"),l("td",null,"false"),l("td",null,"Use \u2018standout\u2019 design for the field; Specifies classes to be applied when focused (overriding default ones)")]),l("tr",null,[l("td",null,"filled"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Use \u2018filled\u2019 design for the field")]),l("tr",null,[l("td",null,"outlined"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Use \u2018outlined\u2019 design for the field")]),l("tr",null,[l("td",null,"borderless"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Use \u2018borderless\u2019 design for the field")]),l("tr",null,[l("td",null,"hide-bottom-space"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Remove bottom padding")]),l("tr",null,[l("td",null,"rounded"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Use \u2018rounded\u2019 design for the field")]),l("tr",null,[l("td",null,"square"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Use \u2018square\u2019 design for the field")]),l("tr",null,[l("td",null,"dense"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Use \u2018dense\u2019 design for the field")]),l("tr",null,[l("td",null,"item-aligned"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Match inner content alignment to that of QItem")]),l("tr",null,[l("td",null,"popup-content-class"),l("td",null,"String"),l("td"),l("td",null,"Class(es) to pass to the popup content")]),l("tr",null,[l("td",null,"popup-content-style"),l("td",null,"String/Array/Object"),l("td"),l("td",null,"Style to pass to the popup content")]),l("tr",null,[l("td",null,"input-class"),l("td",null,"String/Array/Object"),l("td"),l("td",null,"Class(es) to pass to the input element")]),l("tr",null,[l("td",null,"input-style"),l("td",null,"String/Array/Object"),l("td"),l("td",null,"Style to pass to the input element")]),l("tr",null,[l("td",null,"virtual-scroll-horizontal"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Make virtual list work in horizontal mode")]),l("tr",null,[l("td",null,"virtual-scroll-slice-size"),l("td",null,"Number/String"),l("td",null,"30"),l("td",null,"Minimum number of items to render in the virtual list")]),l("tr",null,[l("td",null,"virtual-scroll-slice-ratio-before"),l("td",null,"Number/String"),l("td",null,"1"),l("td",null,"Ratio of number of items in visible zone to render before it")]),l("tr",null,[l("td",null,"virtual-scroll-slice-ratio-after"),l("td",null,"Number/String"),l("td",null,"1"),l("td",null,"Ratio of number of items in visible zone to render after it")]),l("tr",null,[l("td",null,"virtual-scroll-item-size"),l("td",null,"Number/String"),l("td",null,"24"),l("td",null,"Height of each item in the virtual list")]),l("tr",null,[l("td",null,"virtual-scroll-sticky-size-start"),l("td",null,"Number/String"),l("td",null,"0"),l("td")]),l("tr",null,[l("td",null,"virtual-scroll-sticky-size-end"),l("td",null,"Number/String"),l("td",null,"0"),l("td")]),l("tr",null,[l("td",null,"hide-selected"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Use the underlying input tag to hold the label (instead of showing it to the right of the input) of the selected option; Only works for non \u2018multiple\u2019 Selects")]),l("tr",null,[l("td",null,"fill-input"),l("td",null,"Boolean"),l("td",null,"false"),l("td",null,"Fills the input with current value; Useful along with \u2018hide-selected\u2019; Does NOT works along with \u2018multiple\u2019 selection")]),l("tr",null,[l("td",null,"table-colspan"),l("td",null,"Number/String"),l("td"),l("td",null,"The number of columns in the table (you need this if you use table-layout: fixed)")])],-1),m=l("h2",{id:"2-events",class:"doc-heading"},"events",-1),g=l("thead",null,[l("tr",null,[l("th",{class:"text-left"},"Name"),l("th",{class:"text-left"},"Description")])],-1),b=l("tbody",null,[l("tr",null,[l("td",null,"@clear -> function(value)"),l("td",null,"Emitted when the clear button is clicked")]),l("tr",null,[l("td",null,"@update:model-value -> function(value)"),l("td",null,"Emitted when the model changes")]),l("tr",null,[l("td",null,"@input-value -> function(value)"),l("td",null,"Emitted when the value in the text input changes")]),l("tr",null,[l("td",null,"@remove -> function(details)"),l("td",null,"Emitted when an option is removed from selection")]),l("tr",null,[l("td",null,"@add -> function(details)"),l("td",null,"Emitted when an option is added to selection")]),l("tr",null,[l("td",null,"@new-value -> function(inputValue, doneFn)"),l("td",null,"Enables creation of new values; Emitted when a new value has been created; You can override \u2018new-value-mode\u2019 property with it")]),l("tr",null,[l("td",null,"@filter -> function(inputValue, doneFn, abortFn)"),l("td",null,"Emitted when user wants to filter a value")]),l("tr",null,[l("td",null,"@filter-abort -> function()"),l("td",null,"Emitted when a filtering was aborted; Probably a new one was requested?")]),l("tr",null,[l("td",null,"@popup-show -> function(evt)"),l("td",null,"Emitted when the popup is shown")]),l("tr",null,[l("td",null,"@popup-hide -> function(evt)"),l("td",null,"Emitted when the popup is hidden")]),l("tr",null,[l("td",null,"@virtual-scroll -> function(details)"),l("td")])],-1),v=l("h2",{id:"3-methods",class:"doc-heading"},"methods",-1),_=l("thead",null,[l("tr",null,[l("th",{class:"text-left"},"Name"),l("th",{class:"text-left"},"Description")])],-1),w=l("tbody",null,[l("tr",null,[l("td",null,"scrollTo (index[, edge]) => void 0"),l("td",null,"Scroll to the given index")]),l("tr",null,[l("td",null,"reset () => void 0"),l("td",null,"Resets the virtual scroll computations; Needed for custom edge-cases")]),l("tr",null,[l("td",null,"refresh ([index]) => void 0"),l("td",null,"Refreshes the virtual scroll list; Use it after appending items")]),l("tr",null,[l("td",null,"resetValidation () => void 0"),l("td",null,"Resets the validation state")]),l("tr",null,[l("td",null,"validate ([value]) => Boolean,Promise<boolean>"),l("td",null,"Validates the component\u2019s value")]),l("tr",null,[l("td",null,"focus () => void 0"),l("td",null,"Focuses the component")]),l("tr",null,[l("td",null,"blur () => void 0"),l("td",null,"Blurs the component")]),l("tr",null,[l("td",null,"showPopup () => void 0"),l("td",null,"Shows the popup")]),l("tr",null,[l("td",null,"hidePopup () => void 0"),l("td",null,"Hides the popup")]),l("tr",null,[l("td",null,"removeAtIndex (index) => void 0"),l("td",null,"Removes the option at the given index")]),l("tr",null,[l("td",null,"add (opt[, unique]) => void 0"),l("td",null,"Adds option to model")]),l("tr",null,[l("td",null,"toggleOption (opt[, keepOpen]) => void 0"),l("td",null,"Add/remove option from model")]),l("tr",null,[l("td",null,"getOptionIndex () => Number"),l("td",null,"Gets current focused option index from menu; It\u2019s -1 if no option is focused")]),l("tr",null,[l("td",null,"setOptionIndex (index) => void 0"),l("td",null,"Sets current focused option index from menu")]),l("tr",null,[l("td",null,"moveOptionSelection ([offset, skipInputValue]) => void 0"),l("td",null,"Move selected option from menu by index offset")]),l("tr",null,[l("td",null,"filter (value) => void 0"),l("td",null,"Filter options")]),l("tr",null,[l("td",null,"updateMenuPosition () => void 0"),l("td",null,"Updates the position of the menu")]),l("tr",null,[l("td",null,"updateInputValue (value[, noFilter]) => void 0"),l("td",null,"If \u2018use-input\u2019 is specified, this updates the value that it holds")]),l("tr",null,[l("td",null,"getEmittingOptionValue (opt) => Any"),l("td")]),l("tr",null,[l("td",null,"getOptionValue (opt) => Any"),l("td")]),l("tr",null,[l("td",null,"getOptionLabel (opt) => Any"),l("td")]),l("tr",null,[l("td",null,"isOptionSelected (opt) => Boolean"),l("td",null,"Returns true if the option is selected")]),l("tr",null,[l("td",null,"isOptionDisabled (opt) => Boolean"),l("td",null,"Returns true if the option is disabled")])],-1),y=l("h2",{id:"4-computedprops",class:"doc-heading"},"computedProps",-1),S=l("thead",null,[l("tr",null,[l("th",{class:"text-left"},"Name"),l("th",{class:"text-left"},"Type"),l("th",{class:"text-left"},"Description")])],-1),B=l("tbody",null,[l("tr",null,[l("td",null,"hasError"),l("td",null,"Boolean"),l("td",null,"Whether the component is in error state")])],-1),x=l("h2",{id:"5-tips",class:"doc-heading"},"tips",-1),k=l("li",null,"clear \u65F6 model \u4E3A null",-1),N=l("li",null,"All \u201Cclick\u201D events in slots are not propagated to their parent elements.",-1),q=l("li",null,"Please note that transitions do not work when using options-cover prop.",-1),A=l("li",null,"The model for single selection can be anything (String, Object, \u2026) while the model for multiple selection must be an Array.",-1),O=l("li",null,"The list of options is rendered using virtual scroll, so if you render more than one element for an option you must set a q-virtual-scroll\u2013with-prev class on all elements except the first one.",-1),E=l("br",null,null,-1),F=l("br",null,null,-1),I={__name:"select",setup(U){const s=[{id:"doc-title",title:"select"},{id:"1-props",title:"1. props"},{id:"2-events",title:"2. events"},{id:"3-methods",title:"3. methods"},{id:"4-computedprops",title:"4. computedProps"},{id:"5-tips",title:"5. tips"}];return(V,T)=>{const o=d("q-markup-table"),u=d("c-scroll-area"),i=d("doc-link"),r=d("doc-page");return a(),c(r,{desc:"",toc:s},{default:t(()=>[p,n(u,{"fit-content-height":"",class:"q-mt-md q-mb-sm","content-style":{paddingBottom:"10px"}},{default:t(()=>[n(o,{flat:"",bordered:"",dense:""},{default:t(()=>[f,h]),_:1})]),_:1}),m,n(u,{"fit-content-height":"",class:"q-mt-md q-mb-sm","content-style":{paddingBottom:"10px"}},{default:t(()=>[n(o,{flat:"",bordered:"",dense:""},{default:t(()=>[g,b]),_:1})]),_:1}),v,n(u,{"fit-content-height":"",class:"q-mt-md q-mb-sm","content-style":{paddingBottom:"10px"}},{default:t(()=>[n(o,{flat:"",bordered:"",dense:""},{default:t(()=>[_,w]),_:1})]),_:1}),y,n(u,{"fit-content-height":"",class:"q-mt-md q-mb-sm","content-style":{paddingBottom:"10px"}},{default:t(()=>[n(o,{flat:"",bordered:"",dense:""},{default:t(()=>[S,B]),_:1})]),_:1}),x,l("ul",null,[k,N,q,A,O,l("li",null,[n(i,{to:"https://quasar.dev/vue-components/select#lazy-loading"},{default:t(()=>[e("lazy-loading")]),_:1})]),l("li",null,[n(i,{to:"https://quasar.dev/vue-components/select#render-performance"},{default:t(()=>[e("render-performance")]),_:1}),E,e(" unless map-options is used on a large set"),F,e(" do not wrap the array that you are passing in the options prop with ref()/computed()/reactive()/etc")]),l("li",null,[n(i,{to:"https://quasar.dev/vue-components/select#native-form-submit"},{default:t(()=>[e("native-form-submit")]),_:1})])])]),_:1})}}};export{I as default};
