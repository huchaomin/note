(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{724:function(t,e,a){"use strict";a.r(e);var n=a(7),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h5",{attrs:{id:"fragment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fragment"}},[t._v("#")]),t._v(" Fragment")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React, { Fragment } from 'react';\n\n<dl>\n    {props.items.map(item => (\n        // Fragments should also have a `key` prop when mapping collections\n        <Fragment key={item.id}>\n            <dt>{item.term}</dt>\n            <dd>{item.description}</dd>\n        </Fragment>\n    ))}\n</dl>\n")])])]),a("h5",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" <></>")]),t._v(" "),a("p",[t._v("不需要在 fragment 标签中添加任何 prop 且你的工具支持的时候，你可以使用 短语法：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React, { Fragment } from 'react';\nfunction ListItem({ item }) {\n  return (\n    <>\n      <dt>{item.term}</dt>\n      <dd>{item.description}</dd>\n    </>\n  );\n}\n\nfunction Glossary(props) {\n  return (\n    <dl>\n      {props.items.map(item => (\n        <ListItem item={item} key={item.id} />\n      ))}\n    </dl>\n  );\n}\n")])])]),a("h2",{attrs:{id:"另一种写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#另一种写法"}},[t._v("#")]),t._v(" 另一种写法")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React from 'react';\n<React.Fragment>\n    <td>Hello</td>\n    <td>World</td>\n</React.Fragment>\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);