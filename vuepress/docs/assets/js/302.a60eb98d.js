(window.webpackJsonp=window.webpackJsonp||[]).push([[302],{806:function(t,e,s){"use strict";s.r(e);var a=s(7),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"编译选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译选项"}},[t._v("#")]),t._v(" 编译选项")]),t._v(" "),s("p",[t._v("TypeScript 提供了非常多的编译选项，但是官方文档对每一项的解释很抽象，这一章会详细介绍每一个选项的作用，并给出对应的示例。")]),t._v(" "),s("p",[t._v("索引（点击选项跳转到详细介绍）：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("选项")]),t._v(" "),s("th",[t._v("类型")]),t._v(" "),s("th",[t._v("默认值")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("a",{attrs:{href:"#allowjs"}},[s("code",[t._v("allowJs")])])]),t._v(" "),s("td",[s("code",[t._v("boolean")])]),t._v(" "),s("td",[s("code",[t._v("false")])]),t._v(" "),s("td",[t._v("允许编译 js 文件")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"#allowsyntheticdefaultimports"}},[s("code",[t._v("allowSyntheticDefaultImports")])])]),t._v(" "),s("td",[s("code",[t._v("boolean")])]),t._v(" "),s("td",[s("code",[t._v("false")])]),t._v(" "),s("td",[t._v("允许对不包含默认导出的模块使用默认导入。这个选项不会影响生成的代码，只会影响类型检查。")])])])]),t._v(" "),s("h4",{attrs:{id:"allowjs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#allowjs"}},[t._v("#")]),t._v(" allowJs")]),t._v(" "),s("blockquote",[s("p",[t._v("允许编译 js 文件。")])]),t._v(" "),s("p",[t._v("设置为 "),s("code",[t._v("true")]),t._v(" 时，js 文件会被 tsc 编译，否则不会。一般在项目中 js, ts 混合开发时需要设置。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/xcatliu/typescript-tutorial/tree/master/examples/compiler-options/01-allowJs",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看示例"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置为 true 时，编译后的文件包含 foo.js")]),t._v("\n├── lib\n│   ├── foo.js\n│   └── index.js\n├── src\n│   ├── foo.js\n│   └── index.ts\n├── package.json\n└── tsconfig.json\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置为 false 时，编译后的文件不包含 foo.js")]),t._v("\n├── lib\n│   └── index.js\n├── src\n│   ├── foo.js\n│   └── index.ts\n├── package.json\n└── tsconfig.json\n")])])]),s("h4",{attrs:{id:"allowsyntheticdefaultimports"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#allowsyntheticdefaultimports"}},[t._v("#")]),t._v(" allowSyntheticDefaultImports")]),t._v(" "),s("blockquote",[s("p",[t._v("允许对不包含默认导出的模块使用默认导入。这个选项不会影响生成的代码，只会影响类型检查。")])]),t._v(" "),s("p",[s("code",[t._v("export = foo")]),t._v(" 是 ts 为了兼容 commonjs 创造的语法，它对应于 commonjs 中的 "),s("code",[t._v("module.exports = foo")]),t._v("。")]),t._v(" "),s("p",[t._v("在 ts 中，如果要引入一个通过 "),s("code",[t._v("export = foo")]),t._v(" 导出的模块，标准的语法是 "),s("code",[t._v("import foo = require('foo')")]),t._v("，或者 "),s("code",[t._v("import * as foo from 'foo'")]),t._v("。")]),t._v(" "),s("p",[t._v("但由于历史原因，我们已经习惯了使用 "),s("code",[t._v("import foo from 'foo'")]),t._v("。")]),t._v(" "),s("p",[t._v("这个选项就是为了解决这个问题。当它设置为 "),s("code",[t._v("true")]),t._v(" 时，允许使用 "),s("code",[t._v("import foo from 'foo'")]),t._v(" 来导入一个通过 "),s("code",[t._v("export = foo")]),t._v(" 导出的模块。当它设置为 "),s("code",[t._v("false")]),t._v(" 时，则不允许，会报错。")]),t._v(" "),s("p",[t._v("当然，我们一般不会在 ts 文件中使用 "),s("code",[t._v("export = foo")]),t._v(" 来导出模块，而是在"),s("a",{attrs:{href:"../basics/declaration-files#export-1"}},[t._v("写（符合 commonjs 规范的）第三方库的声明文件")]),t._v("时，才会用到 "),s("code",[t._v("export = foo")]),t._v(" 来导出类型。")]),t._v(" "),s("p",[t._v("比如 React 的声明文件中，就是通过 "),s("code",[t._v("export = React")]),t._v(" 来导出类型：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" React "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明 React 的类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("此时若我们通过 "),s("code",[t._v("import React from 'react'")]),t._v(" 来导入 react 则会报错，"),s("a",{attrs:{href:"https://github.com/xcatliu/typescript-tutorial/tree/master/examples/compiler-options/02-allowSyntheticDefaultImports",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看示例"),s("OutboundLink")],1),t._v("\n：")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Module '\"typescript-tutorial/examples/compiler-options/02-allowSyntheticDefaultImports/false/node_modules/@types/react/index\"' can only be default-imported using the 'esModuleInterop' flagts(1259)")]),t._v("\n")])])]),s("p",[t._v("解决办法就是将 "),s("code",[t._v("allowSyntheticDefaultImports")]),t._v(" 设置为 "),s("code",[t._v("true")]),t._v("。")])])}),[],!1,null,null,null);e.default=o.exports}}]);