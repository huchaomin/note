(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{825:function(t,s,a){"use strict";a.r(s);var r=a(7),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"_1-遍历数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-遍历数组"}},[t._v("#")]),t._v(" 1. 遍历数组")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(i,j) in/of posts"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// i 是值 j 是下标")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-遍历对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-遍历对象"}},[t._v("#")]),t._v(" 2. 遍历对象")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(i,j,n) in/of posts"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// i 是值 j 是键名 n 是下标")]),t._v("\n")])])]),a("h4",{attrs:{id:"关于遍历对象的顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于遍历对象的顺序"}},[t._v("#")]),t._v(" 关于遍历对象的顺序")]),t._v(" "),a("ol",[a("li",[t._v("会先判断是否有iterator接口，如果有循环执行next()方法")]),t._v(" "),a("li",[t._v("没有iterator的情况下，会调用"),a("code",[t._v("Object.keys()")]),t._v("方法，在不同浏览器中，JS 引擎不能保证输出顺序一致")])])])}),[],!1,null,null,null);s.default=e.exports}}]);